#-------------------------------------------------------------
# 파이썬에서 미리 만들어서 제공아는 클래스
# Built-in class
# ==> 숫자, 문자 저장할 수 있는 class
# ==> in, float, str, bool, list, tuple, dict, set
#-------------------------------------------------------------
# num = 12
# num.to_bytes()        #num은 int(clss에 포함)이기 때문에 .찍으면 int에 포함된 메서드가 뜬다
# 힙에 저장된 것 = 객체 (객체 각각 상세하게 말할 때 각각의 인스턴스라 부름)

#사람을 저장하는 데이터 타입 // 어떻게 만드드냐?? // 사람이기 때문에 가지고 있는 특징? 외형?
# 표현할 수 있는 것들 => ex) 성별,이름,나이,직업,먹는다,잔다 ....=> 이것들을 변수로 저장, ex2)일한다, 공부한다....>>이것들은 함수로
#ex,ex1들 힙쳐서 class로 만듬(class는 함수 or 변수만 있을 수도

#----------------------------------------------
# 내 프로그램에서 데이터를 표현하는 클래스
# 사용자 정의 클래스
#---------------------------------------
# 생성 방법
# class 클래스명:
#       변수      -> 클래스가 나타내는 속성, 특징, 성질... 외형
#       메서드     -> 클래스의 기능, 역할
#=>> 클래스를 생성한 것이지 메모리에 데이터를 저장 X
#-------------------------------------------------

#-------------------------------------------------
# 계산기 프로그램을 만들고자 함
#=>> 계산기 데이터 타입 생성
#   -> 연산(4칙연산) ===> 기능 ==> 함수
#   -> 데이터       ===> 변수 (데이터 저장)

# => 클래스명 <- 어떤 데이터가 저장되는지 알 수 있도록 명명 calc
# => 변수                                           num1, num2
# => 함수(메서드)                                    plus(), minus(), mult(), div()
#------------------
class calc:

    # 객체 생성자(Construct) 형태 정해져 있음
    # 클래스명() -> 객체 생성 시 호출되는 메서드
    # 파이썬에서 클래스 생성 시에 자주 사용되는 기능의 메서드를 미리 만들어서 제공하는 것
    # 형태 def __메서드명__(self)
    # __init__() : 객체 생성 시 변수 초기화 하는 경우 사용
    def __init__(self, num1, num2): # num1 2 넣지 않으면 디폴트 밸류 자동 0, 0
        print('__init__')
        self.num1 = num1
        self.num2 = num2
    # 클래스의 기능 => 메서드
    def plus(self, num1, num2):
        print(self.num1, self.num2)
        print(num1+num2) #class에 포함된 변수 사용

    def minus(self, num1, num2):
        print(num1-num2)

    def multi(self, num1, num2):
        print(num1*num2)

    def div(self, num1, num2):
        print(num1/num2)


# class 사용하기 ===> 메모리에 데이터를 저장 =? 힙에 객체를 생성하는 것
#                   클래스명() -> 객체 주소를 알려줌(객체 생성)

myCalc = calc(12, 5) # 힙에 생성 된것을 변수에 저장 (사용하기 위해) #클래스 안 변수 : 필드 등등.. 함수 : 메서드
print(f'myClac => {type(myCalc)}')
# 클래스 안에 존재하는 변수, 함수 접근 --------------------------------------------
# 객체변수명.변수, 객체변수명.함수명()
myCalc.num1 = 12
myCalc.num2 = 5
myCalc.plus(4, 2)

yourCalc = calc(10.3, 5) #객체 생성
yourCalc.num1 = 10.3
yourCalc.num2 = 5
yourCalc.plus(12,3)

otherCalc = calc(2,1)
otherCalc.plus(2,1)

